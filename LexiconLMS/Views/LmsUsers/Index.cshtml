
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@model IEnumerable<ApplicationUser>
@{
    ViewData["Title"] = "LmsUsers";
}

<h3>Användare</h3>

<table class="table table-striped">
    <thead  class="table-dark">
        <tr>
             <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(model => model.Name)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["EmailSortParm"]">@Html.DisplayNameFor(model => model.Email)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CourseSortParm"]">@Html.DisplayNameFor(model => model.Course.Name)</a>
            </th>
            <th>  
                <p id="special" style="color:#007bff;" font-size:30%;">Användare</p>
            </th>
            <th>
                @*Avsiktligt tom för att få rubrik bakgrunden hela vägen*@
            </th>
        </tr>
    </thead>
    <tbody>

        @if (User.IsInRole("Teacher"))
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Course.Name)
                    </td>
                    <td>
                        @if (await UserManager.IsInRoleAsync(item, "Teacher"))
                        {<p>Lärare</p>}
                        @if (await UserManager.IsInRoleAsync(item, "Student"))
                        {<p>Elev</p>}

                    </td>

                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="badge badge-success">Ändra</a> |
                        <a asp-action="Details" asp-route-id="@item.Id" class="badge badge-primary">Detaljer</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id" class="badge badge-danger">Radera</a>
                        
                    </td>                  
                </tr>
            }
        }

        @if (User.IsInRole("Student"))
        {
            @foreach (var item in Model)
            {
                <tr>
                    @if (await UserManager.IsInRoleAsync(item, "Student"))
                    {

                        <th>
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(model => model.Name)</a>
                        </th>
                        <th>
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["EmailSortParm"]">@Html.DisplayNameFor(model => model.Email)</a>

                        </th>
                        <th>
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["CourseSortParm"]">@Html.DisplayNameFor(model => model.Course.Name)</a>
                            @Html.DisplayNameFor(model => model.Course.Name)
                        </th>
                        <td>
                            @if (await UserManager.IsInRoleAsync(item, "Teacher"))
                            {<p>Lärare</p>}
                            @if (await UserManager.IsInRoleAsync(item, "Student"))
                            {<p>Elev</p>}

                        </td>


                        <td>

                            <a asp-action="Details" asp-route-id="@item.Id">Detaljer</a> |

                        </td>
                    }

 
                </tr>
            }
        }
      
    </tbody>
</table>
